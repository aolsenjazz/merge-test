import { DeviceDriver } from '../driver-types';
import {
  NoninteractiveInputDriver,
  KnobDriver,
} from '../driver-types/input-drivers';

function createNoninteractivePad(
  width: number,
  height: number
): NoninteractiveInputDriver {
  return {
    interactive: false,
    width,
    height,
    type: 'pad',
    shape: 'rect',
  };
}

function createKnob(n: MidiNumber): KnobDriver {
  return {
    interactive: true,
    status: 'controlchange',
    number: n,
    channel: 0,
    response: 'continuous',
    type: 'knob',
    width: 0.5,
    height: 0.5,
    shape: 'circle',
    knobType: 'absolute',
    availableColors: [],
    availableFx: [],
  };
}

export const Device: DeviceDriver = {
  name: 'MPKmini2',
  type: 'normal',
  anonymous: false,
  width: 12.375,
  height: 6.75,
  controlSequence: [],
  style: {
    borderTopLeftRadius: '0.5em',
    borderTopRightRadius: '0.5em',
    borderBottomLeftRadius: '0.5em',
    borderBottomRightRadius: '0.5em',
  },
  keyboard: {
    defaultOctave: 2,
    nOctaves: 2,
    channel: 0,
    width: 11.5,
    height: 3.2,
    left: 0.4375,
    bottom: 0,
    enabled: false,
  },
  inputGrids: [
    {
      id: 'XY',
      height: 0.9,
      width: 0.9,
      left: 0.625,
      bottom: 5.6,
      nRows: 1,
      nCols: 1,
      inputs: [
        {
          status: 'pitchbend',
          channel: 0,
          number: 0,
          type: 'xy',
          width: 0.9,
          height: 0.9,
          shape: 'circle',
          interactive: true,
          response: 'continuous',
          handleWidth: 0.5,
          handleHeight: 0.5,
          horizontal: false,
          inverted: false,
          availableColors: [],
          availableFx: [],
        },
        {
          status: 'controlchange',
          channel: 0,
          number: 1,
          type: 'xy',
          width: 0.9,
          height: 0.9,
          shape: 'circle',
          interactive: true,
          response: 'continuous',
          handleWidth: 0.5,
          handleHeight: 0.5,
          horizontal: false,
          inverted: false,
          availableColors: [],
          availableFx: [],
        },
      ],
    },
    {
      id: 'Arpeggiator',
      height: 1.75,
      width: 1.625,
      left: 0.3,
      bottom: 3.7,
      nRows: 3,
      nCols: 2,
      inputs: [
        createNoninteractivePad(0.5, 0.25),
        createNoninteractivePad(0.5, 0.25),
        createNoninteractivePad(0.5, 0.25),
        createNoninteractivePad(0.5, 0.25),
        createNoninteractivePad(0.5, 0.25),
        createNoninteractivePad(0.5, 0.25),
      ],
    },
    {
      id: 'Pads',
      height: 2.75,
      width: 5.25,
      bottom: 3.7,
      left: 2.125,
      nRows: 2,
      nCols: 4,
      inputs: [
        createNoninteractivePad(1, 1),
        createNoninteractivePad(1, 1),
        createNoninteractivePad(1, 1),
        createNoninteractivePad(1, 1),
        createNoninteractivePad(1, 1),
        createNoninteractivePad(1, 1),
        createNoninteractivePad(1, 1),
        createNoninteractivePad(1, 1),
      ],
    },
    {
      id: 'Knobs',
      height: 2.25,
      width: 4.5,
      bottom: 4.25,
      left: 7.5,
      nRows: 2,
      nCols: 4,
      inputs: [
        createKnob(1),
        createKnob(2),
        createKnob(3),
        createKnob(4),
        createKnob(5),
        createKnob(6),
        createKnob(7),
        createKnob(8),
      ],
    },
    {
      id: 'PAD CONTROLS',
      height: 0.25,
      width: 2.625,
      bottom: 3.875,
      left: 7.625,
      nRows: 1,
      nCols: 3,
      inputs: [
        createNoninteractivePad(0.5, 0.25),
        createNoninteractivePad(0.5, 0.25),
        createNoninteractivePad(0.5, 0.25),
      ],
    },
    {
      id: 'PROG SELECT',
      height: 0.25,
      width: 0.5,
      left: 10.75,
      bottom: 3.875,
      nRows: 1,
      nCols: 1,
      inputs: [createNoninteractivePad(0.5, 0.25)],
    },
  ],
};
