import { DeviceDriver, Color } from '../driver-types';
import {
  PadDriver,
  NoninteractiveInputDriver,
  KnobDriver,
} from '../driver-types/input-drivers';

function createNoninteractivePad(
  width: number,
  height: number
): NoninteractiveInputDriver {
  return {
    interactive: false,
    width,
    height,
    type: 'pad',
    shape: 'rect',
    style: {},
  };
}

function mainPadColors(n: MidiNumber): Color[] {
  return [
    {
      default: true,
      name: 'Off',
      string: 'transparent',
      array: [144, n, 4],
    },
    {
      name: 'Red (dim)',
      string: '#F58A70',
      array: [144, n, 5],
    },
    {
      name: 'Red',
      string: '#F36E56',
      array: [144, n, 6],
    },
    {
      name: 'Red (Bright)',
      string: '#F44336',
      array: [144, n, 7],
    },
    {
      modifier: 'blink',
      name: 'Red',
      string: '#F44336',
      array: [144, n, 1],
    },
    {
      name: 'Yellow (dim)',
      string: '#FFD77D',
      array: [144, n, 21],
    },
    {
      name: 'Yellow',
      string: '#FFCB4F',
      array: [144, n, 22],
    },
    {
      name: 'Yellow (bright)',
      string: '#FFC107',
      array: [144, n, 23],
    },
    {
      modifier: 'blink',
      name: 'Yellow',
      string: '#FFC107',
      array: [144, n, 19],
    },
    {
      name: 'Green (dim)',
      string: '#75BB6D',
      array: [144, n, 53],
    },
    {
      name: 'Green',
      string: '#4CAF50',
      array: [144, n, 20],
    },
    {
      modifier: 'blink',
      name: 'Green',
      string: '#4CAF50',
      array: [144, n, 24],
    },
  ];
}

function createMainPad(n: MidiNumber): PadDriver {
  return {
    interactive: true,
    status: 'noteon/noteoff',
    channel: 0,
    number: n,
    type: 'pad',
    width: 0.75,
    height: 0.75,
    shape: 'rect',
    response: 'gate',
    style: {},
    availableColors: mainPadColors(n),
    availableFx: [],
  };
}

function createTransportColors(n: MidiNumber): Color[] {
  return [
    {
      default: true,
      name: 'Off',
      string: 'transparent',
      array: [144, n, 4],
    },
    {
      name: 'Red (dim)',
      string: '#F58A70',
      array: [144, n, 5],
    },
    {
      name: 'Red',
      string: '#F36E56',
      array: [144, n, 6],
    },
    {
      name: 'Red (Bright)',
      string: '#F44336',
      array: [144, n, 7],
    },
    {
      modifier: 'blink',
      name: 'Red',
      string: '#F44336',
      array: [144, n, 1],
    },
    {
      name: 'Yellow (dim)',
      string: '#FFD77D',
      array: [144, n, 21],
    },
    {
      name: 'Yellow',
      string: '#FFCB4F',
      array: [144, n, 22],
    },
    {
      name: 'Yellow (bright)',
      string: '#FFC107',
      array: [144, n, 23],
    },
    {
      name: 'Green (dim)',
      string: '#75BB6D',
      array: [144, n, 53],
    },
    {
      name: 'Green',
      string: '#4CAF50',
      array: [144, n, 20],
    },
    {
      modifier: 'blink',
      name: 'Green',
      string: '#4CAF50',
      array: [144, n, 24],
    },
  ];
}

function createTransport(n: MidiNumber): PadDriver {
  return {
    interactive: true,
    status: 'noteon/noteoff',
    channel: 0,
    number: n,
    type: 'pad',
    width: 0.5,
    height: 0.5,
    shape: 'circle',
    response: 'gate',
    style: {},
    availableColors: createTransportColors(n),
    availableFx: [],
  };
}

function createKnob(n: MidiNumber): KnobDriver {
  return {
    interactive: true,
    status: 'controlchange',
    number: n,
    channel: 0,
    response: 'continuous',
    type: 'knob',
    width: 0.5,
    height: 0.5,
    shape: 'circle',
    knobType: 'absolute',
    style: {},
    availableColors: [],
    availableFx: [],
  };
}

export const Device: DeviceDriver = {
  name: 'Launchkey Mini LK Mini InControl',
  type: 'normal',
  anonymous: false,
  width: 12.75,
  height: 6.75,
  style: {
    borderTopLeftRadius: '0.5em',
    borderTopRightRadius: '0.5em',
    borderBottomLeftRadius: '0.5em',
    borderBottomRightRadius: '0.5em',
  },
  keyboard: {
    defaultOctave: 2,
    nOctaves: 2,
    channel: 0,
    width: 11.625,
    height: 3.125,
    left: 0.5,
    bottom: 0,
    enabled: false,
  },
  controlSequence: [
    [176, 51, 127],
    [176, 52, 127],
    [176, 53, 127],
    [176, 54, 127],
    [176, 55, 127],
    [176, 56, 127],
    [176, 57, 0],
    [176, 58, 0],
    [144, 104, 4],
    [144, 96, 4],
    [144, 97, 4],
    [144, 98, 4],
    [144, 99, 4],
    [144, 100, 4],
    [144, 101, 4],
    [144, 102, 4],
    [144, 103, 4],
    [144, 112, 4],
    [144, 113, 4],
    [144, 114, 4],
    [144, 115, 4],
    [144, 116, 4],
    [144, 117, 4],
    [144, 118, 4],
    [144, 119, 4],
    [176, 107, 127],
    [176, 106, 0],
    [176, 105, 127],
    [176, 104, 0],
    [144, 120, 4],
    [176, 0, 32],
    [144, 12, 0],
    [176, 51, 127],
    [176, 52, 127],
    [176, 53, 127],
    [176, 54, 127],
    [176, 55, 127],
    [176, 56, 127],
    [176, 57, 0],
    [176, 58, 0],
    [144, 104, 4],
    [144, 96, 4],
    [144, 97, 4],
    [144, 98, 4],
    [144, 99, 4],
    [144, 100, 4],
    [144, 101, 4],
    [144, 102, 4],
    [144, 103, 4],
    [144, 112, 4],
    [144, 113, 4],
    [144, 114, 4],
    [144, 115, 4],
    [144, 116, 4],
    [144, 117, 4],
    [144, 118, 4],
    [144, 119, 4],
    [176, 107, 127],
    [176, 106, 0],
    [176, 105, 127],
    [176, 104, 0],
    [144, 120, 4],
    [144, 120, 4],
    [176, 106, 0],
    [176, 107, 127],
    [176, 104, 0],
    [176, 105, 127],
    [144, 12, 127],
    [176, 0, 40],
    [176, 51, 127],
    [176, 52, 127],
    [176, 53, 127],
    [176, 54, 127],
    [176, 55, 127],
    [176, 56, 127],
    [176, 57, 0],
    [176, 58, 0],
    [144, 112, 4],
    [144, 113, 4],
    [144, 114, 4],
    [144, 115, 4],
    [144, 116, 4],
    [144, 117, 4],
    [144, 118, 4],
    [144, 119, 4],
    [144, 120, 4],
    [144, 104, 4],
    [144, 96, 4],
    [144, 97, 4],
    [144, 98, 4],
    [144, 99, 4],
    [144, 100, 4],
    [144, 101, 4],
    [144, 102, 4],
    [144, 103, 4],
    [176, 106, 0],
    [176, 107, 127],
    [176, 104, 0],
    [176, 105, 127],
    [176, 7, 108],
    [176, 41, 108],
    [176, 42, 108],
    [176, 43, 108],
    [176, 44, 108],
    [176, 45, 108],
    [176, 46, 108],
  ],
  inputGrids: [
    {
      id: 'Octave/Track',
      nRows: 2,
      nCols: 2,
      width: 1.25,
      height: 1.75,
      left: 0.55,
      bottom: 3.75,
      inputs: [
        {
          interactive: true,
          status: 'controlchange',
          channel: 0,
          number: 106,
          type: 'pad',
          width: 0.5,
          height: 0.3,
          shape: 'rect',
          response: 'gate',
          style: {},
          availableColors: [],
          availableFx: [],
        },
        {
          interactive: true,
          status: 'controlchange',
          channel: 0,
          number: 107,
          type: 'pad',
          width: 0.5,
          height: 0.3,
          shape: 'rect',
          response: 'gate',
          style: {},
          availableColors: [],
          availableFx: [],
        },
        createNoninteractivePad(0.5, 0.3),
        createNoninteractivePad(0.5, 0.3),
      ],
    },
    {
      id: 'MIDI Channel',
      nRows: 1,
      nCols: 1,
      width: 0.375,
      height: 0.375,
      left: 2.125,
      bottom: 4.875,
      inputs: [createNoninteractivePad(0.375, 0.375)],
    },
    {
      id: 'Main Pads',
      nRows: 2,
      nCols: 8,
      width: 7,
      height: 1.625,
      left: 3,
      bottom: 3.875,
      inputs: [
        createMainPad(96),
        createMainPad(97),
        createMainPad(98),
        createMainPad(99),
        createMainPad(100),
        createMainPad(101),
        createMainPad(102),
        createMainPad(103),
        createMainPad(112),
        createMainPad(113),
        createMainPad(114),
        createMainPad(115),
        createMainPad(116),
        createMainPad(117),
        createMainPad(118),
        createMainPad(119),
      ],
    },
    {
      id: 'Knobs',
      nRows: 1,
      nCols: 8,
      width: 6.75,
      height: 0.5,
      left: 3.125,
      bottom: 6,
      inputs: [
        createKnob(21),
        createKnob(22),
        createKnob(23),
        createKnob(24),
        createKnob(25),
        createKnob(26),
        createKnob(27),
        createKnob(28),
      ],
    },
    {
      id: 'Transport',
      nRows: 2,
      nCols: 1,
      width: 0.5,
      height: 1.5,
      left: 10.375,
      bottom: 3.875,
      inputs: [createTransport(104), createTransport(120)],
    },
    {
      id: 'Scene',
      nRows: 2,
      nCols: 1,
      width: 0.5,
      height: 0.875,
      left: 11.375,
      bottom: 4.25,
      inputs: [
        {
          interactive: true,
          status: 'controlchange',
          channel: 0,
          number: 104,
          type: 'pad',
          width: 0.5,
          height: 0.3,
          shape: 'rect',
          response: 'gate',
          style: {},
          availableColors: [],
          availableFx: [],
        },
        {
          interactive: true,
          status: 'controlchange',
          channel: 0,
          number: 105,
          type: 'pad',
          width: 0.5,
          height: 0.3,
          shape: 'rect',
          response: 'gate',
          style: {},
          availableColors: [],
          availableFx: [],
        },
      ],
    },
  ],
};
